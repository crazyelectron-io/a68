NJ7P Assembler	                                            SWTBUG	Page 1  
 Line  Addr Object Code	Source Code

 00001				NAM	SWTBUG
 00002			*	VERSION 1.00
 00003			
 00004				OPT	PAG
 00005			****************************************************
 00006			*REPLACEMENT FOR MIKBUG ROM
 00007			*FOR SWTPC 6800 COMPUTER SYSTEM
 00008			*COPYRIGHT 1977
 00009			*SOUTHWEST TECHNICAL PROD. CORP.
 00010			*AUGUST, 1977
 00011			****************************************************
 00012			
 00013			
 00014      A000		ORG	$A000
 00015 A000 0002	IRQ	RMB	2	IRQ POINTER
 00016 A002 0002	BEGA	RMB	2	BEGINNING ADDR PNCH
 00017 A004 0002	ENDA	RMB	2	ENDING ADDR PNCH
 00018 A006 0002	NMI	RMB	2	NMI INTERRUPT VECTOR
 00019 A008 0001	SP	RMB	1	S HIGH
 00020 A009 0001		RMB	1	S LOW
 00021 A00A 0002	PORADD	RMB	2	PORT ADDRESS
 00022 A00C 0001	PORECH	RMB	1	ECHO ON/OFF FLAG
 00023 A00D 0001	XHI	RMB	1	XREG HIGH
 00024 A00E 0001	XLOW	RMB	1	XREG LOW
 00025 A00F 0001	CKSM	RMB	1	CHECKSUM
 00026 A010 0002	XTEMP	RMB	2	X-REG TEMP STGE
 00027 A012 0002	SWIJMP	RMB	2	SWI JUMP VECTOR
 00028      A044 	TW	EQU	$A044	TEMPORARY STORAGE
 00029      A046 	TEMP	EQU	$A046	TEMPORARY STORAGE
 00030      A047 	BYTECT	EQU	$A047	BYTECT AND MCONT TEMP.
 00031      8004 	CTLPOR	EQU	$8004	CONTROL PORT ADDRESS
 00032      C000 	PROM	EQU	$C000	JUMP TO PROM ADDRESS
 00033 A014 0002	BKPT	RMB	2	BREAKPOINT ADDRESS
 00034 A016 0001	BKLST	RMB	1	BREAKPOINT DATA
 00035			
 00036      A042		ORG	$A042
 00037 A042 0001	STACK	RMB	1	SWTBUG STACK
 00038			
 00039      E000		ORG	$E000
 00040			
 00041			*I/O INTERRUPT SEQUENCE
 00042 E000 FE A000 	IRQV	LDX	IRQ
 00043 E003 6E 00		JMP	0,X
 00044			
 00045			*JUMP TO USER PROGRAM
 00046 E005 8D 40	JUMP	BSR	BADDR
 00047 E007 6E 00		JMP	0,X
 00048			
 00049 E009 10 16 04	CURSOR	FCB	$10,$16,4	CT-1024 CURSOR CONTROL
 00050			
 00051			*ASCII LOADING ROUTINE
 00052 E00C BD E334 	LOAD	JSR	RDON	READER ON, DIS ECHO, GET P#
 00053 E00F 8D 67	LOAD3	BSR	INCH
 00054 E011 81 53		CMP A	#'S
 00055 E013 26 FA		BNE	LOAD3	1ST CHAR NOT S
 00056 E015 8D 61		BSR	INCH	READ CHAR
 00057 E017 81 39		CMP A	#'9
 00058 E019 27 29		BEQ	LOAD21
 00059 E01B 81 31		CMP A	#'1
 00060 E01D 26 F0		BNE	LOAD3	2ND CHAR NOT 1
 00061 E01F 7F A00F 		CLR	CKSM	ZERO CHECKSUM
 00062 E022 8D 31		BSR	BYTE	READ BYTE
 00063 E024 80 02		SUB A	#2
 00064 E026 B7 A047 		STA A	BYTECT BYTE COUNT
NJ7P Assembler	                                            SWTBUG	Page 2  
 Line  Addr Object Code	Source Code

 00065			*BUILD ADDRESS
 00066 E029 8D 1C		BSR	BADDR
 00067			*STORE DATA
 00068 E02B 8D 28	LOAD11	BSR	BYTE
 00069 E02D 7A A047 		DEC	BYTECT
 00070 E030 27 09		BEQ	LOAD15	ZERO BYTE COUNT
 00071 E032 A7 00		STA A	0,X	STORE DATA
 00072 E034 A1 00		CMP A	0,X	DATA STORED?
 00073 E036 26 08		BNE	LOAD19
 00074 E038 08			INX
 00075 E039 20 F0		BRA	LOAD11
 00076 E03B 7C A00F 	LOAD15	INC	CKSM
 00077 E03E 27 CF		BEQ	LOAD3
 00078 E040 86 3F	LOAD19	LDA A	#'?
 00079 E042 8D 31		BSR	OUTCH
 00080 E044 7E E2D4 	LOAD21	JMP	RDOFF1
 00081			
 00082			*BUILD ADDRESS
 00083 E047 8D 0C	BADDR	BSR	BYTE	READ 2 FRAMES
 00084 E049 B7 A00D 		STA A	XHI
 00085 E04C 8D 07		BSR	BYTE
 00086 E04E B7 A00E 		STA A	XLOW
 00087 E051 FE A00D 		LDX	XHI	LOAD IXR WITH NUMBER
 00088 E054 39			RTS
 00089			
 00090			*INPUT BYTE (TWO FRAMES)
 00091 E055 8D 53	BYTE	BSR	INHEX	GET HEX CHAR
 00092 E057 48		BYTE1	ASL A
 00093 E058 48			ASL A
 00094 E059 48			ASL A
 00095 E05A 48			ASL A
 00096 E05B 16			TAB
 00097 E05C 8D 4C		BSR	INHEX
 00098 E05E 1B			ABA
 00099 E05F 16			TAB
 00100 E060 FB A00F 		ADD B	CKSM
 00101 E063 F7 A00F 		STA B	CKSM
 00102 E066 39			RTS
 00103			
 00104 E067 44		OUTHL	LSR A	OUT	HEX LEFT BCD DIGIT
 00105 E068 44			LSR A
 00106 E069 44			LSR A
 00107 E06A 44			LSR A
 00108 E06B 84 0F	OUTHR	AND A	#$F	OUT HEX RIGHT BCD DIGIT
 00109 E06D 8B 30		ADD A	#$30
 00110 E06F 81 39		CMP A	#$39
 00111 E071 23 02		BLS	OUTCH
 00112 E073 8B 07		ADD A	#$7
 00113			
 00114			*OUTPUT ONE CHAR
 00115 E075 7E E1D1 	OUTCH	JMP	OUTEEE
 00116 E078 7E E1AC 	INCH	JMP	INEEE
 00117			
 00118			*PRINT DATA POINTED TO BY X REG
 00119 E07B 8D F8	PDATA2	BSR	OUTCH
 00120 E07D 08			INX
 00121 E07E A6 00	PDATA1	LDA A	0,X
 00122 E080 81 04		CMP A	#4
 00123 E082 26 F7		BNE	PDATA2
 00124 E084 39			RTS	STOP	ON HEX 04
 00125			
 00126 E085 7E E14A 	C1	JMP	SWTCTL
 00127			
 00128			*MEMORY EXAMINE AND CHANGE
NJ7P Assembler	                                            SWTBUG	Page 3  
 Line  Addr Object Code	Source Code

 00129 E088 8D BD	CHANGE	BSR	BADDR
 00130 E08A CE E19D 	CHA51	LDX	#MCL
 00131 E08D 8D EF		BSR	PDATA1	C/R L/F
 00132 E08F CE A00D 		LDX	#XHI
 00133 E092 8D 34		BSR	OUT4HS	PRINT ADDRESS
 00134 E094 FE A00D 		LDX	XHI
 00135 E097 8D 31		BSR	OUT2HS	PRINT OLD DATA
 00136 E099 8D 31		BSR	OUTS	OUTPUT SPACE
 00137 E09B 8D DB	ANOTH	BSR	INCH	INPUT CHAR
 00138 E09D 81 20		CMP A	#$20
 00139 E09F 27 FA		BEQ	ANOTH
 00140 E0A1 81 0D		CMP A	#$D
 00141 E0A3 27 E0		BEQ	C1
 00142 E0A5 81 5E		CMP A	#'^	UP ARROW?
 00143 E0A7 20 2C		BRA	AL3	BRANCH FOR ADJUSTMENT
 00144 E0A9 01			NOP
 00145			
 00146			*INPUT HEX CHARACTER
 00147 E0AA 8D CC	INHEX	BSR	INCH
 00148 E0AC 80 30	INHEX1	SUB A	#$30
 00149 E0AE 2B 4C		BMI	C3
 00150 E0B0 81 09		CMP A	#$9
 00151 E0B2 2F 0A		BLE	IN1HG
 00152 E0B4 81 11		CMP A	#$11
 00153 E0B6 2B 44		BMI	C3	NOT HEX
 00154 E0B8 81 16		CMP A	#$16
 00155 E0BA 2E 40		BGT	C3	NOT HEX
 00156 E0BC 80 07		SUB A	#7
 00157 E0BE 39		IN1HG	RTS
 00158			
 00159 E0BF A6 00	OUT2H	LDA A	0,X	OUTPUT 2 HEX CHAR
 00160 E0C1 8D A4	OUT2HA	BSR	OUTHL	OUT LEFT HEX CHAR
 00161 E0C3 A6 00		LDA A	0,X
 00162 E0C5 08			INX
 00163 E0C6 20 A3		BRA	OUTHR	OUTPUT RIGHT HEX CHAR
 00164			
 00165 E0C8 8D F5	OUT4HS	BSR	OUT2H	OUTPUT 4 HEX CHAR + SPACE
 00166 E0CA 8D F3	OUT2HS	BSR	OUT2H	OUTPUT 2 HEX CHAR + SPACE
 00167			
 00168 E0CC 86 20	OUTS	LDA A	#$20	SPACE
 00169 E0CE 20 A5		BRA	OUTCH	(BSR & TRS)
 00170			
 00171			*ENTER POWER ON SEQUENCE
 00172 E0D0 8E A042 	START	LDS	#STACK
 00173 E0D3 20 2C		BRA	AL1	BRANCH FOR ADDRESS COMPATIBIL
 00174			
 00175			********************************************
 00176			*PART OF MEMORY EXAMINE AND CHANGE
 00177 E0D5 26 07	AL3	BNE	SK1
 00178 E0D7 09			DEX
 00179 E0D8 09			DEX
 00180 E0D9 FF A00D 		STX	XHI
 00181 E0DC 20 AC		BRA	CHA51
 00182 E0DE FF A00D 	SK1	STX	XHI
 00183 E0E1 20 02		BRA	AL4
 00184			
 00185 E0E3 20 6D	EOE3	BRA	CONTRL	BRANCH FOR MIKBUG EQUIV. CONT
 00186			
 00187 E0E5 81 30	AL4	CMP A	#$30
 00188 E0E7 25 A1		BCS	CHA51
 00189 E0E9 81 46		CMP A	#$46
 00190 E0EB 22 9D		BHI	CHA51
 00191 E0ED 8D BD		BSR	INHEX1
 00192 E0EF BD E057 		JSR	BYTE1
NJ7P Assembler	                                            SWTBUG	Page 4  
 Line  Addr Object Code	Source Code

 00193 E0F2 09			DEX
 00194 E0F3 A7 00		STA A	0,X	CHANGE MEMORY
 00195 E0F5 A1 00		CMP A	0,X
 00196 E0F7 27 91		BEQ	CHA51	DID CHANGE
 00197 E0F9 7E E040 		JMP	LOAD19	DIDN'T CHANGE
 00198 E0FC BE A008 	C3	LDS	SP
 00199 E0FF 20 49		BRA	SWTCTL
 00200			**************************************************
 00201			
 00202			*CONTINUE POWER UP SEQUENCE
 00203 E101 BF A008 	AL1	STS	SP	INIT TARGET STACK PTR.
 00204 E104 86 FF		LDA A	#$FF
 00205 E106 BD E308 		JSR	SWISET
 00206			*CONFIGURE FOR PIA AND SEE IF OK
 00207 E109 CE 8004 		LDX	#CTLPOR
 00208 E10C BD E284 		JSR	PIAINI	INIT PIA
 00209 E10F A6 00		LDA A	0,X
 00210 E111 A1 02		CMP A	2,X
 00211 E113 20 02		BRA	AL2
 00212			
 00213 E115 20 19		BRA	PRINT	BRA FOR BILOAD
 00214			
 00215 E117 26 39	AL2	BNE	CONTRL
 00216			
 00217			*INITIALIZE AS ACIA
 00218 E119 86 03		LDA A	#3	ACIA MASTER RESET
 00219 E11B A7 00		STA A	0,X
 00220 E11D 86 11		LDA A	#$11
 00221 E11F A7 00		STA A	0,X
 00222 E121 20 2F		BRA	CONTRL
 00223			
 00224			*ENTER FROM SOFTWARE INTERRUPT
 00225 E123 01		SF0	NOP
 00226 E124 BF A008 	SFE1	STS	SP	SAVE TARGETS STACK POINTER
 00227			*DECREMENT P COUNTER
 00228 E127 30			TSX
 00229 E128 6D 06		TST	6,X
 00230 E12A 26 02		BNE	*+4
 00231 E12C 6A 05		DEC	5,X
 00232 E12E 6A 06		DEC	6,X
 00233			*PRINT CONTENTS OF STACK.
 00234 E130 CE E19D 	PRINT	LDX	#MCL
 00235 E133 BD E07E 		JSR	PDATA1
 00236 E136 FE A008 		LDX	SP
 00237 E139 08			INX
 00238 E13A 8D 8E		BSR	OUT2HS	COND CODES
 00239 E13C 8D 8C		BSR	OUT2HS	ACC B
 00240 E13E 8D 8A		BSR	OUT2HS	ACC A
 00241 E140 8D 86		BSR	OUT4HS	IXR
 00242 E142 8D 84		BSR	OUT4HS	PGM COUNTER
 00243 E144 CE A008 		LDX	#SP
 00244 E147 BD E0C8 		JSR	OUT4HS	STACK POINTER
 00245 E14A FE A012 	SWTCTL	LDX	SWIJMP
 00246 E14D 8C E123 		CPX	#SF0
 00247 E150 27 19		BEQ	CONTR1
 00248			
 00249 E152 8E A042 	CONTRL	LDS	#STACK	SET CONTRL STACK POINTER
 00250 E155 CE 8004 		LDX	#CTLPOR	RESET TO CONTROL PORT
 00251 E158 FF A00A 		STX	PORADD
 00252 E15B 7F A00C 		CLR	PORECH	TURN ECHO ON
 00253 E15E 8D 73		BSR	SAVGET	GET PORT # AND TYPE
 00254 E160 27 03		BEQ	POF1
 00255 E162 BD E27D 		JSR	PIAECH	SET PIA ECHO ON IF MP-C INTER
 00256 E165 BD E353 	POF1	JSR	PNCHOF	TURN PUNCH OFF
NJ7P Assembler	                                            SWTBUG	Page 5  
 Line  Addr Object Code	Source Code

 00257 E168 BD E347 		JSR	RDOFF	TURN READER OFF
 00258 E16B CE E19C 	CONTR1	LDX	#MCLOFF
 00259 E16E BD E07E 		JSR	PDATA1	PRINT DATA STRING
 00260 E171 8D 39		BSR	INEEE	READ COMMAND CHARACTER
 00261			
 00262			*COMMAND LOOKUP ROUTINE
 00263 E173 CE E3D1 	LOOK	LDX	#TABLE
 00264 E176 A1 00	OVER	CMP A	0,X
 00265 E178 26 07		BNE	SK3
 00266 E17A BD E0CC 		JSR	OUTS	SKIP SPACE
 00267 E17D EE 01		LDX	1,X
 00268 E17F 6E 00		JMP	0,X
 00269 E181 08		SK3	INX
 00270 E182 08			INX
 00271 E183 08			INX
 00272 E184 8C E3F8 		CPX	#TABEND+3
 00273 E187 26 ED		BNE	OVER
 00274 E189 20 BF	SWTL1	BRA	SWTCTL
 00275			
 00276			*SOFTWARE INTERRUPT ENTRY POINT
 00277 E18B FE A012 	SFE	LDX	SWIJMP	JUMP TO VECTORED SOFTWARE INT
 00278 E18E 6E 00		JMP	0,X
 00279			
 00280 E190 53 39 04	S9	FCB	'S,'9,4	END OF TAPE
 00281			
 00282			***************************************************
 00283 E193 0D 0A 15 00	MTAPE1	FCB	$D,$A,$15,0,0,0,'S,'1,4	PUNCH FORMAT
 00284			
 00285 E19C 13		MCLOFF	FCB	$13	READER OFF
 00286 E19D 0D 0A 15 00	MCL	FCB	$D,$A,$15,0,0,0,'$,4
 00287			
 00288 E1A5 20 4C	EIA5	BRA	BILD	BINARY LOADER INPUT
 00289			***************************************************
 00290			
 00291			
 00292			*NMI SEQUENCE
 00293 E1A7 FE A006 	NMIV	LDX	NMI	GET NMI VECTOR
 00294 E1AA 6E 00		JMP	0,X
 00295			
 00296 E1AC 20 40	INEEE	BRA	INEEE1
 00297			
 00298			*BYTE SEARCH ROUTINE
 00299 E1AE BD E047 	SEARCH	JSR	BADDR	GET TOP ADDRESS
 00300 E1B1 FF A004 		STX	ENDA
 00301 E1B4 BD E047 		JSR	BADDR	GET BOTTOM ADDRESS
 00302 E1B7 BD E055 		JSR	BYTE	GET BYTE TO SEARCH FOR
 00303 E1BA 16			TAB
 00304 E1BB A6 00	OVE	LDA A	0,X
 00305 E1BD FF A00D 		STX	XHI
 00306 E1C0 11			CBA
 00307 E1C1 27 02		BEQ	PNT
 00308 E1C3 20 21		BRA	INCR1
 00309 E1C5 CE E19D 	PNT	LDX	#MCL
 00310 E1C8 BD E07E 		JSR	PDATA1
 00311 E1CB CE A00D 		LDX	#XHI
 00312 E1CE 20 10		BRA	SKP0
 00313			***************************************************
 00314			
 00315			*GO TO USER PROGRAM ROUTINE
 00316 E1D0 3B		GOTO	RTI
 00317 E1D1 20 3A	OUTEEE	BRA	OUTEE1
 00318			
 00319			
 00320			
NJ7P Assembler	                                            SWTBUG	Page 6  
 Line  Addr Object Code	Source Code

 00321			*SAVE IXR AND LOAD IXR WITH CORRECT
 00322			*PORT NUMBER AND TEST FOR TYPE
 00323 E1D3 FF A010 	SAVGET	STX	XTEMP	STORE INDEX REGISTER
 00324 E1D6 FE A00A 	GETPT1	LDX	PORADD
 00325 E1D9 37		ISACIA	PSH B
 00326 E1DA E6 01		LDA B	1,X
 00327 E1DC E1 03		CMP B	3,X
 00328 E1DE 33			PUL B
 00329 E1DF 39			RTS
 00330			***************************************************
 00331			
 00332			*CONTINUATION OF SEARCH ROUTINE
 00333 E1E0 BD E0C8 	SKP0	JSR	OUT4HS
 00334 E1E3 FE A00D 		LDX	XHI
 00335 E1E6 BC A004 	INCR1	CPX	ENDA
 00336 E1E9 27 9E		BEQ	SWTL1
 00337 E1EB 08			INX
 00338 E1EC 20 CD		BRA	OVE
 00339			
 00340 E1EE 8D 06	INEEE1	BSR	INCH8	INPUT 8 BIT CHARACTER
 00341 E1F0 84 7F		AND A	#%01111111	GET RID OF PARITY BIT
 00342 E1F2 39			RTS
 00343			
 00344 E1F3 31		BILD	INS	FIX UP STACK WHEN USING
 00345 E1F4 31			INS	BINARY LOADER ON SWTPC TAPES
 00346 E1F5 31			INS
 00347			
 00348			*INPUT ONE CHAR INTO ACC B
 00349 E1F6 37		INCH8	PSH B		SAVE ACC B
 00350 E1F7 8D DA		BSR	SAVGET	SAVE IXR, GET PORT# AND TYPE
 00351 E1F9 26 28		BNE	IN1	INPUT FROM PIA IF NOT
 00352 E1FB 86 15		LDA A	#$15	RECONFIG FOR 8 BIT, 1 SB
 00353 E1FD A7 00		STA A	0,X
 00354 E1FF A6 00	ACIAIN	LDA A	0,X
 00355 E201 47			ASR A
 00356 E202 24 FB		BCC	ACIAIN	NOT READY
 00357 E204 A6 01		LDA A	1,X	LOAD CHAR
 00358 E206 F6 A00C 		LDA B	PORECH
 00359 E209 27 07		BEQ	ACIOUT	ECHO
 00360 E20B 20 11		BRA	RES	DON'T ECHO
 00361			
 00362			*OUTPUT ONE CHARACTER
 00363 E20D 37		OUTEE1	PSH B		SAVE ACC B
 00364 E20E 8D C3		BSR	SAVGET
 00365 E210 26 2E		BNE	IOUT
 00366			
 00367 E212 C6 11	ACIOUT	LDA B	#$11
 00368 E214 E7 00		STA B	0,X
 00369 E216 E6 00	ACIOU1	LDA B	0,X
 00370 E218 57			ASR B
 00371 E219 57			ASR B
 00372 E21A 24 FA		BCC	ACIOU1	ACIA NOT READY
 00373 E21C A7 01		STA A	1,X	OUTPUT CHARACTER
 00374 E21E 33		RES	PUL B		RESTORE ACC B
 00375 E21F FE A010 		LDX	XTEMP
 00376 E222 39			RTS
 00377			
 00378			*PIA INPUT ROUTINE
 00379 E223 A6 00	IN1	LDA A	0,X	LOOK FOR START BIT
 00380 E225 2B FC		BMI	IN1
 00381 E227 8D 3A		BSR	DDL	DELAY HALF BIT TIME
 00382 E229 C6 04		LDA B	#4	SET DEL FOR FULL BIT TIME
 00383 E22B E7 02		STA B	2,X
 00384 E22D 58			ASL B		SET UP CNTR WITH 8
NJ7P Assembler	                                            SWTBUG	Page 7  
 Line  Addr Object Code	Source Code

 00385 E22E 8D 2A	IN3	BSR	DEL	WAIT ONE CHAR TIME
 00386 E230 0D			SEC
 00387 E231 69 00		ROL	0,X
 00388 E233 46			ROR A
 00389 E234 5A			DEC B
 00390 E235 26 F7		BNE	IN3
 00391 E237 8D 21		BSR	DEL	WAIT FOR STOP BIT
 00392 E239 F6 A00C 		LDA B	PORECH	IS ECHO DESIRED?
 00393 E23C 27 13		BEQ	IOUT2	ECHO
 00394 E23E 20 DE		BRA	RES	RESTORE IXR,ACCB
 00395			*PIA OUTPUT ROUTINE
 00396 E240 8D 23	IOUT	BSR	DDL1	DELAY ONE HALF BIT TIME
 00397 E242 C6 0A		LDA B	#$A	SET UP COUNTER
 00398 E244 6A 00		DEC	0,X	SET START BIT
 00399 E246 8D 16		BSR	DE	START TIMER
 00400 E248 8D 10	OUT1	BSR	DEL	DELAY ONE BIT TIME
 00401 E24A A7 00		STA A	0,X	PUT OUT ONE DATA BIT
 00402 E24C 0D			SEC
 00403 E24D 46			ROR A	SHIFT	IN NEXT BIT
 00404 E24E 5A			DEC B		DECREMENT COUNTER
 00405 E24F 26 F7		BNE	OUT1	TEST FOR 0
 00406 E251 E6 02	IOUT2	LDA B	2,X	TEST FOR STOP BITS
 00407 E253 58			ASL B	SHIFT	BIT TO SIGN
 00408 E254 2A C8		BPL	RES	BRA FOR 1 STOP BIT
 00409 E256 8D 02		BSR	DEL	DELAY FOR STOP BITS
 00410 E258 20 C4		BRA	RES
 00411 E25A 6D 02	DEL	TST	2,X	IS TIME UP
 00412 E25C 2A FC		BPL	DEL
 00413 E25E 6C 02	DE	INC	2,X	RESET TIMER
 00414 E260 6A 02		DEC	2,X
 00415 E262 39			RTS
 00416			
 00417 E263 6F 02	DDL	CLR	2,X	HALF BIT DELAY
 00418 E265 8D F7	DDL1	BSR	DE
 00419 E267 20 F1		BRA	DEL
 00420			
 00421			
 00422			*OPTIONAL PORT ROUTINE
 00423 E269 8D 83	OPTL	BSR	INEEE1
 00424 E26B 16			TAB
 00425 E26C 7F A00B 		CLR	PORADD+1	SET I/O ADDRESS FOR $8000
 00426 E26F FE A00A 		LDX	PORADD
 00427 E272 8D 10		BSR	PIAINI	INITIALIZE PIA
 00428 E274 8D 07		BSR	PIAECH	SET ECHO
 00429 E276 CE E3EF 		LDX	#TABLE1	P, L OR E
 00430 E279 17			TBA
 00431 E27A 7E E176 		JMP	OVER	LOOK AT TABLE FOR E, L OR P
 00432			
 00433 E27D 86 34	PIAECH	LDA A	#$34	SET DDR
 00434 E27F A7 03		STA A	3,X
 00435 E281 A7 02		STA A	2,X
 00436 E283 39		NOOPT	RTS
 00437			
 00438			*PIA INITIALIZATION ROUTINE
 00439 E284 6C 00	PIAINI	INC	0,X	SET DDR
 00440 E286 86 07		LDA A	#$7
 00441 E288 A7 01		STA A	1,X
 00442 E28A 6C 00		INC	0,X
 00443 E28C A7 02		STA A	2,X
 00444 E28E 39			RTS
 00445			
 00446			*MINIFLOPPY DISK BOOT
 00447 E28F 7F 8014 	DISK	CLR	$8014
 00448 E292 8D 2E		BSR	DELAY
NJ7P Assembler	                                            SWTBUG	Page 8  
 Line  Addr Object Code	Source Code

 00449 E294 C6 0B		LDA B	#$0B
 00450 E296 8D 25		BSR	RETT2
 00451 E298 E6 04	LOOP1	LDA B	4,X
 00452 E29A C5 01		BIT B	#1
 00453 E29C 26 FA		BNE	LOOP1
 00454 E29E 6F 06		CLR	6,X
 00455 E2A0 8D 1D		BSR	RETURN
 00456 E2A2 C6 9C		LDA B	#$9C
 00457 E2A4 8D 17		BSR	RETT2
 00458 E2A6 CE 2400 		LDX	#$2400
 00459 E2A9 C5 02	LOOP2	BIT B	#2
 00460 E2AB 27 06		BEQ	LOOP3
 00461 E2AD B6 801B 		LDA A	$801B
 00462 E2B0 A7 00		STA A	0,X
 00463 E2B2 08			INX
 00464 E2B3 F6 8018 	LOOP3	LDA B	$8018
 00465 E2B6 C5 01		BIT B	#1
 00466 E2B8 26 EF		BNE	LOOP2
 00467 E2BA 7E 2400 		JMP	$2400
 00468 E2BD E7 04	RETT2	STA B	4,X
 00469 E2BF 8D 00	RETURN	BSR	RETT1
 00470 E2C1 39		RETT1	RTS
 00471			
 00472			*GENERAL PURPOSE DELAY LOOP
 00473 E2C2 CE FFFF 	DELAY	LDX	#$FFFF
 00474 E2C5 09		DELAY1	DEX
 00475 E2C6 8C 8014 		CPX	#$8014	STOP AT 8014
 00476 E2C9 26 FA	DUM	BNE	DELAY1
 00477 E2CB 39			RTS
 00478			
 00479			
 00480			*CLRAR SCREEN FOR CT-1024 TYPE TERMINALS
 00481 E2CC CE E009 	CLEAR	LDX	#CURSOR
 00482 E2CF BD E07E 		JSR	PDATA1
 00483 E2D2 8D F1		BSR	DELAY1	DELAY
 00484 E2D4 BD E347 	RDOFF1	JSR	RDOFF
 00485 E2D7 20 58		BRA	C4
 00486			
 00487			*BREAKPOINT ENTERING ROUTINE
 00488 E2D9 CE E123 	BREAK	LDX	#SF0
 00489 E2DC BC A012 		CPX	SWIJMP	BREAKPOINTS ALREADY IN USE?
 00490 E2DF 27 1A		BEQ	INUSE
 00491 E2E1 08			INX
 00492 E2E2 8D 32	BREAK0	BSR	STO1
 00493 E2E4 BD E047 		JSR	BADDR
 00494 E2E7 FF A014 		STX	BKPT
 00495 E2EA A6 00		LDA A	0,X
 00496 E2EC B7 A016 		STA A	BKLST
 00497 E2EF 86 3F		LDA A	#$3F
 00498 E2F1 A7 00		STA A	0,X
 00499 E2F3 CE E123 		LDX	#SF0
 00500 E2F6 8D 1E		BSR	STO1
 00501 E2F8 7E E16B 		JMP	CONTR1
 00502 E2FB FE A014 	INUSE	LDX	BKPT
 00503 E2FE B6 A016 		LDA A	BKLST
 00504 E301 A7 00		STA A	0,X
 00505 E303 CE E124 		LDX	#SFE1
 00506 E306 20 DA		BRA	BREAK0
 00507			
 00508 E308 B7 A043 	SWISET	STA A	STACK+1	FIX POWER UP INTERRUPT
 00509 E30B FE A012 		LDX	SWIJMP
 00510 E30E 8C E123 		CPX	#SF0
 00511 E311 27 06		BEQ	STORTN
 00512 E313 CE E124 	STO	LDX	#SFE1
NJ7P Assembler	                                            SWTBUG	Page 9  
 Line  Addr Object Code	Source Code

 00513 E316 FF A012 	STO1	STX	SWIJMP
 00514 E319 39		STORTN	RTS
 00515			
 00516 E31A 8D 5A	PUNCH1	BSR	PUNCH
 00517 E31C 20 0F		BRA	POFC4
 00518			
 00519			*FORMAT END OF TAPE WITH PGM. CTR. AND S9
 00520 E31E CE A049 	PNCHS9	LDX	#$A049
 00521 E321 FF A004 		STX	ENDA
 00522 E324 09			DEX
 00523 E325 8D 52		BSR	PUNCH2
 00524 E327 CE E190 		LDX	#S9
 00525 E32A BD E07E 	PDAT	JSR	PDATA1
 00526 E32D 8D 24	POFC4	BSR	PNCHOF
 00527 E32F 8D 91		BSR	DELAY
 00528 E331 7E E152 	C4	JMP	CONTRL
 00529			
 00530 E334 73 A00C 	RDON	COM	PORECH	DISABLE ECHO FOR ACIA
 00531 E337 86 11		LDA A	#$11	RON CHAR.
 00532 E339 C6 20		LDA B	#$20	STROBE CHAR
 00533 E33B 8D 1A		BSR	STROBE
 00534 E33D BD E1D9 		JSR	ISACIA	CHECK TO SEE IF PIA
 00535 E340 27 04		BEQ	RTNN
 00536 E342 86 3C		LDA A	#$3C	DISABLE PIA ECHO IF PIA
 00537 E344 A7 03		STA A	3,X
 00538 E346 39		RTNN	RTS
 00539			
 00540 E347 86 13	RDOFF	LDA A	#$13	TURN READER OFF
 00541 E349 C6 10		LDA B	#$10
 00542 E34B 20 0A		BRA	STROBE
 00543			
 00544 E34D 86 12	PNCHON	LDA A	#$12
 00545 E34F C6 04		LDA B	#4
 00546 E351 20 04		BRA	STROBE
 00547			
 00548 E353 86 14	PNCHOF	LDA A	#$14
 00549 E355 C6 08		LDA B	#$8
 00550			
 00551			*PIA STROBING ROUTINE FOR PUNCH/READ ON/OFF
 00552 E357 BD E075 	STROBE	JSR	OUTCH
 00553 E35A BD E1D6 		JSR	GETPT1
 00554 E35D 27 16		BEQ	RTN1
 00555 E35F 86 02		LDA A	#2
 00556 E361 CA 01		ORA B	#1
 00557 E363 8D 0C		BSR	STR2
 00558 E365 8D 08		BSR	STR1
 00559 E367 86 02		LDA A	#2
 00560 E369 C6 01		LDA B	#1
 00561 E36B E7 00		STA B	0,X
 00562 E36D 8D 02		BSR	STR2
 00563 E36F 86 06	STR1	LDA A	#6
 00564 E371 A7 01	STR2	STA A	1,X
 00565 E373 E7 00		STA B	0,X
 00566 E375 39		RTN1	RTS
 00567			
 00568			*PUNCH FROM BEGINNING ADDRESS (BEGA) THRU
 00569			*ENDING ADDRESS (ENDA)
 00570 E376 FE A002 	PUNCH	LDX	BEGA
 00571 E379 FF A044 	PUNCH2	STX	TW
 00572 E37C 8D CF		BSR	PNCHON
 00573 E37E B6 A005 	PUN11	LDA A	ENDA+1
 00574 E381 B0 A045 		SUB A	TW+1
 00575 E384 F6 A004 		LDA B	ENDA
 00576 E387 F2 A044 		SBC B	TW
NJ7P Assembler	                                            SWTBUG	Page 10 
 Line  Addr Object Code	Source Code

 00577 E38A 26 04		BNE	PUN22
 00578 E38C 81 10		CMP A	#16
 00579 E38E 25 02		BCS	PUN23
 00580 E390 86 0F	PUN22	LDA A	#15
 00581 E392 8B 04	PUN23	ADD A	#4
 00582 E394 B7 A047 		STA A	BYTECT
 00583 E397 80 03		SUB A	#3
 00584 E399 B7 A046 		STA A	TEMP
 00585			*PUNCH C/R L/F NULLS S1
 00586 E39C CE E193 		LDX	#MTAPE1
 00587 E39F BD E07E 		JSR	PDATA1
 00588 E3A2 5F			CLR B
 00589			*PUNCH FRAME COUNT
 00590 E3A3 CE A047 		LDX	#BYTECT
 00591 E3A6 8D 24		BSR	PUNT2	PUNCH 2 HEX CHARACTERS
 00592			*PUNCH ADDRESS
 00593 E3A8 CE A044 		LDX	#TW
 00594 E3AB 8D 1F		BSR	PUNT2
 00595 E3AD 8D 1D		BSR	PUNT2
 00596			*PUNCH DATA
 00597 E3AF FE A044 		LDX	TW
 00598 E3B2 8D 18	PUN32	BSR	PUNT2	PUNCH ONE BYTE
 00599 E3B4 7A A046 		DEC	TEMP
 00600 E3B7 26 F9		BNE	PUN32
 00601 E3B9 FF A044 		STX	TW
 00602 E3BC 53			COM B
 00603 E3BD 37			PSH B
 00604 E3BE 30			TSX
 00605 E3BF 8D 0B		BSR	PUNT2	PUNCH CHECKSUM
 00606 E3C1 33			PUL B	RESTORE	STACK
 00607 E3C2 FE A044 		LDX	TW
 00608 E3C5 09			DEX
 00609 E3C6 BC A004 		CPX	ENDA
 00610 E3C9 26 B3		BNE	PUN11
 00611 E3CB 39		RTN5	RTS
 00612			
 00613			*PUNCH 2 HEX CHAR, UPDATE CHECKSUM
 00614 E3CC EB 00	PUNT2	ADD B	0,X
 00615 E3CE 7E E0BF 		JMP	OUT2H	OUTPUT 2 HEX CHAR AND RTS
 00616			
 00617			*COMMAND TABLE
 00618 E3D1 47		TABLE	FCB	'G	GOTO
 00619 E3D2 E1D0 		FDB	GOTO
 00620 E3D4 5A			FCB	'Z	GOTO PROM
 00621 E3D5 C000 		FDB	PROM
 00622 E3D7 4D			FCB	'M	MEMORY EXAM AND CHANGE
 00623 E3D8 E088 		FDB	CHANGE
 00624 E3DA 46			FCB	'F	BYTE SEARCH
 00625 E3DB E1AE 		FDB	SEARCH
 00626 E3DD 52			FCB	'R	REGISTER DUMP
 00627 E3DE E130 		FDB	PRINT
 00628 E3E0 4A			FCB	'J	JUMP
 00629 E3E1 E005 		FDB	JUMP
 00630 E3E3 43			FCB	'C	CLEAR SCREEN
 00631 E3E4 E2CC 		FDB	CLEAR
 00632 E3E6 44			FCB	'D	DISK BOOT
 00633 E3E7 E28F 		FDB	DISK
 00634 E3E9 42			FCB	'B	BREAKPOINT
 00635 E3EA E2D9 		FDB	BREAK
 00636 E3EC 4F			FCB	'O	OPTIONAL PORT
 00637 E3ED E269 		FDB	OPTL
 00638 E3EF 50		TABLE1	FCB	'P	ASCII PUNCH
 00639 E3F0 E31A 		FDB	PUNCH1
 00640 E3F2 4C			FCB	'L	ASCII LOAD
NJ7P Assembler	                                            SWTBUG	Page 11 
 Line  Addr Object Code	Source Code

 00641 E3F3 E00C 		FDB	LOAD
 00642 E3F5 45		TABEND	FCB	'E	END OF TAPE
 00643 E3F6 E31E 		FDB	PNCHS9
 00644			
 00645      E3F8		ORG	$E3F8
 00646 E3F8 E000 		FDB	IRQV	IRQ VECTOR
 00647 E3FA E18B 		FDB	SFE	SOFTWARE INTERRUPT
 00648 E3FC E1A7 		FDB	NMIV	NMI VECTOR
 00649 E3FE E0D0 		FDB	START	RESTART VECTOR
 00650			
 00651			*	ORG	$A048
 00652			*	FDB	START
 00653 E400			END


End of Assembly
No errors found
NJ7P Assembler	                                            SWTBUG	Page 12 
          Symbol Addr Seg Flg           Symbol Addr Seg Flg

          ACIAIN E1FF  A  A*            ACIOU1 E216  A  A*  
          ACIOUT E212  A  A*               AL1 E101  A  A*  
             AL2 E117  A  A*               AL3 E0D5  A  A*  
             AL4 E0E5  A  A*             ANOTH E09B  A  A*  
           BADDR E047  A  A*              BEGA A002  A  A*  
            BILD E1F3  A  A*             BKLST A016  A  A*  
            BKPT A014  A  A*             BREAK E2D9  A  A*  
          BREAK0 E2E2  A  A*              BYTE E055  A  A*  
           BYTE1 E057  A  A*            BYTECT A047  A  A*  
              C1 E085  A  A*                C3 E0FC  A  A*  
              C4 E331  A  A*             CHA51 E08A  A  A*  
          CHANGE E088  A  A*              CKSM A00F  A  A*  
           CLEAR E2CC  A  A*            CONTR1 E16B  A  A*  
          CONTRL E152  A  A*            CTLPOR 8004  A  A*  
          CURSOR E009  A  A*               DDL E263  A  A*  
            DDL1 E265  A  A*                DE E25E  A  A*  
             DEL E25A  A  A*             DELAY E2C2  A  A*  
          DELAY1 E2C5  A  A*              DISK E28F  A  A*  
             DUM E2C9  A  A               EIA5 E1A5  A  A   
            ENDA A004  A  A*              EOE3 E0E3  A  A   
          GETPT1 E1D6  A  A*              GOTO E1D0  A  A*  
             IN1 E223  A  A*             IN1HG E0BE  A  A*  
             IN3 E22E  A  A*              INCH E078  A  A*  
           INCH8 E1F6  A  A*             INCR1 E1E6  A  A*  
           INEEE E1AC  A  A*            INEEE1 E1EE  A  A*  
           INHEX E0AA  A  A*            INHEX1 E0AC  A  A*  
           INUSE E2FB  A  A*              IOUT E240  A  A*  
           IOUT2 E251  A  A*               IRQ A000  A  A*  
            IRQV E000  A  A*            ISACIA E1D9  A  A*  
            JUMP E005  A  A*              LOAD E00C  A  A*  
          LOAD11 E02B  A  A*            LOAD15 E03B  A  A*  
          LOAD19 E040  A  A*            LOAD21 E044  A  A*  
           LOAD3 E00F  A  A*              LOOK E173  A  A   
           LOOP1 E298  A  A*             LOOP2 E2A9  A  A*  
           LOOP3 E2B3  A  A*               MCL E19D  A  A*  
          MCLOFF E19C  A  A*            MTAPE1 E193  A  A*  
             NMI A006  A  A*              NMIV E1A7  A  A*  
           NOOPT E283  A  A               OPTL E269  A  A*  
            OUT1 E248  A  A*             OUT2H E0BF  A  A*  
          OUT2HA E0C1  A  A             OUT2HS E0CA  A  A*  
          OUT4HS E0C8  A  A*             OUTCH E075  A  A*  
          OUTEE1 E20D  A  A*            OUTEEE E1D1  A  A*  
           OUTHL E067  A  A*             OUTHR E06B  A  A*  
            OUTS E0CC  A  A*               OVE E1BB  A  A*  
            OVER E176  A  A*              PDAT E32A  A  A   
          PDATA1 E07E  A  A*            PDATA2 E07B  A  A*  
          PIAECH E27D  A  A*            PIAINI E284  A  A*  
          PNCHOF E353  A  A*            PNCHON E34D  A  A*  
          PNCHS9 E31E  A  A*               PNT E1C5  A  A*  
            POF1 E165  A  A*             POFC4 E32D  A  A*  
          PORADD A00A  A  A*            PORECH A00C  A  A*  
           PRINT E130  A  A*              PROM C000  A  A*  
           PUN11 E37E  A  A*             PUN22 E390  A  A*  
           PUN23 E392  A  A*             PUN32 E3B2  A  A*  
           PUNCH E376  A  A*            PUNCH1 E31A  A  A*  
          PUNCH2 E379  A  A*             PUNT2 E3CC  A  A*  
           RDOFF E347  A  A*            RDOFF1 E2D4  A  A*  
            RDON E334  A  A*               RES E21E  A  A*  
           RETT1 E2C1  A  A*             RETT2 E2BD  A  A*  
          RETURN E2BF  A  A*              RTN1 E375  A  A*  
            RTN5 E3CB  A  A               RTNN E346  A  A*  
              S9 E190  A  A*            SAVGET E1D3  A  A*  
          SEARCH E1AE  A  A*               SF0 E123  A  A*  
NJ7P Assembler	                                            SWTBUG	Page 13 
          Symbol Addr Seg Flg           Symbol Addr Seg Flg

             SFE E18B  A  A*              SFE1 E124  A  A*  
             SK1 E0DE  A  A*               SK3 E181  A  A*  
            SKP0 E1E0  A  A*                SP A008  A  A*  
           STACK A042  A  A*             START E0D0  A  A*  
             STO E313  A  A               STO1 E316  A  A*  
          STORTN E319  A  A*              STR1 E36F  A  A*  
            STR2 E371  A  A*            STROBE E357  A  A*  
          SWIJMP A012  A  A*            SWISET E308  A  A*  
          SWTCTL E14A  A  A*             SWTL1 E189  A  A*  
          TABEND E3F5  A  A*             TABLE E3D1  A  A*  
          TABLE1 E3EF  A  A*              TEMP A046  A  A*  
              TW A044  A  A*               XHI A00D  A  A*  
            XLOW A00E  A  A*             XTEMP A010  A  A*  

